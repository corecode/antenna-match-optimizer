[project]
name = "antenna-match-optimizer"
version = "0.1.0"
description = "Impedance matching optimizer"
authors = [
    {name = "Simon Schubert", email = "2@0x2c.org"},
]
dependencies = [
    "scikit-rf>=1.0.0",
    "flask>=3.0.3",
    "matplotlib>=3.9.0",
    "numpy>=1.26.4",
    "schemdraw>=0.19",
]
requires-python = ">=3.11"
readme = "README.md"
license = {text = "AGPL3"}

[project.optional-dependencies]
web = [
    "gunicorn>=22.0.0",
]

[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"


[tool.pdm]
distribution = true

[tool.pdm.dev-dependencies]
dev = [
    "pytest>=8.2.1",
    "black>=24.4.2",
    "mypy>=1.10.0",
    "isort>=5.13.2",
    "ruff>=0.4.5",
    "coverage>=7.5.2",
    "pytest-cov>=5.0.0",
    "pytest-profiling>=1.7.0",
]

[tool.pdm.build]
excludes = ["**/.ruff_cache"]

[tool.pytest.ini_options]
#addopts = "--cov=src/antenna_match_optimizer --cov-report=term-missing"
testpaths = ["tests"]

[tool.mypy]
mypy_path = "src,tests,webapp"
check_untyped_defs = true
disallow_any_generics = true
ignore_missing_imports = true
no_implicit_optional = true
show_error_codes = true
strict_equality = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
module = "antenna_match_optimizer.*"
disallow_untyped_defs = true

[tool.isort]
profile = "black"
src_paths = ["src", "tests", "webapp"]

[tool.black]
line-length = 88
target-version = ['py37']
include = '\.pyi?$'
extend-exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.ruff]
line-length = 88

[tool.ruff.lint]
select = [
    "E",  # Pycodestyle errors
    "W",  # Pycodestyle warnings
    "F",  # Pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
]
ignore = []

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.coverage.run]
branch = true
source = ["src"]

[tool.coverage.report]
show_missing = true